{"version":3,"file":"static/js/10.58b9a502.chunk.js","mappings":"uNAqCA,UAjCa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAcP,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,IAAiBH,GAF5C,OAEcF,EAFd,OAGQC,EAAQD,GAHhB,gDAKQM,QAAQC,IAAI,UALpB,kEADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACN,IAECF,GAKD,wBACKA,EAAKA,KAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACX,2BACI,gBAAKC,IAAG,yCAAoCH,GAAgBI,IAAKH,KACjE,uBAAIA,KACJ,uCAAeC,OAHVH,EADE,MALR,IAclB,C,+LCjCKM,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAOoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,uBAA4CG,GAPhE,cAOGI,EAPH,yBAQIA,EAASC,KAAKC,SARlB,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAOoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,GAAYR,GAP/D,cAOGI,EAPH,yBAQIA,EAASC,MARb,kEAWA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCsB,GAAhC,gFACGR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAMoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,EAA/B,YAAmDR,GANvE,cAMGI,EANH,yBAOIA,EAASC,MAPb,kEAUA,IAAMI,EAAc,mCAAG,WAAOD,GAAP,gFACpBR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHS,SAMHK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,EAA/B,YAAmDR,GANhD,cAMpBI,EANoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUdI,EAAS,mCAAG,WAAOC,GAAP,gFACfX,EAAU,CACZC,OAAQ,CACJC,QAASJ,EACTa,MAAAA,IAJa,SAOER,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAsCG,GAPxC,cAOfI,EAPe,yBAQdA,EAASC,KAAKC,SARA,2CAAH,qD","sources":["components/AdditionalInfo/Cast/Cast.jsx","services/app.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCastById } from \"services/app\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        async function getCast() {\n            try {\n                const cast = await getMovieCastById(movieId);\n                setCast(cast);\n            } catch (error) {\n                console.log('Error!')\n            };\n        };\n        getCast();\n    }, [movieId]);\n\n    if (!cast) {\n            return null;\n    };\n    \n    return (\n        <ul>\n            {cast.cast.map(({ id, profile_path, name, character }) => (\n                <li key={id}>\n                    <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} />\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e7011c858e160819547da18edbe0186b';\n\nexport async function getTrendingMovies() {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, options);\n    return response.data.results;\n};\n\nexport async function getMovieById(movie_id) {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}`, options);\n    return response.data;\n};\n\nexport async function getMovieCastById(movie_id) {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}/credits`, options);\n    return response.data;\n};\n\nexport const getReviewsById = async (movie_id) => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews`, options);\n    return response.data.results;\n};\n\nexport const findFilms = async (query) => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie`, options);\n    return response.data.results;\n};"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCastById","console","log","getCast","map","id","profile_path","name","character","src","alt","BASE_URL","API_KEY","getTrendingMovies","options","params","api_key","axios","response","data","results","getMovieById","movie_id","getReviewsById","findFilms","query"],"sourceRoot":""}