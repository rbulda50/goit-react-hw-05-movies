{"version":3,"file":"static/js/39.1141d4d0.chunk.js","mappings":"qQA4BA,EA1BiB,SAAC,GAAoB,IAAnBA,EAAkB,EAAlBA,aACf,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACI,kBAAMC,SARO,SAAAC,GACbA,EAAEC,iBAEFN,EAAaE,GACbC,EAAS,GACZ,EAGG,WACI,kBACII,SAdK,SAACF,GACdF,EAASE,EAAEG,OAAON,MACrB,EAaWA,MAAOA,EACPO,YAAY,iBACZC,KAAK,UACT,mBAAQA,KAAK,SAAb,sBAGX,ECuBD,EA5Ce,WAAO,IAAD,EACjB,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAwB5C,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAEkCC,EAAAA,EAAAA,IAAUH,GAAkBhB,GAF9D,OAEcoB,EAFd,OAGQV,EAAUU,GAHlB,gDAKQC,QAAQC,IAAI,UALpB,0DALY,uBACPtB,GAAUgB,IADH,mCAaZO,EACH,GAAE,CAACvB,EAAOgB,KAGH,iCACJ,SAAC,EAAD,CAAUlB,aAvBO,SAACE,GAClBC,EAASD,GACTe,EAA0B,KAAVf,EAAe,CAACA,MAAAA,GAAS,CAAC,EAC7C,KAqBG,wBACKS,EAAOe,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACR,yBACI,SAAC,EAAAC,KAAD,CACIC,GAAE,UAAKH,GACPI,MAAO,CAACC,KAAMnB,GAFlB,SAGMe,KAJDD,EADD,QAUvB,C,+LC7CKM,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAOoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,uBAA4CG,GAPhE,cAOGI,EAPH,yBAQIA,EAASC,KAAKC,SARlB,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAOoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,GAAYR,GAP/D,cAOGI,EAPH,yBAQIA,EAASC,MARb,kEAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gFACGR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHd,SAMoBK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,EAA/B,YAAmDR,GANvE,cAMGI,EANH,yBAOIA,EAASC,MAPb,kEAUA,IAAMK,EAAc,mCAAG,WAAOF,GAAP,gFACpBR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHS,SAMHK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+BW,EAA/B,YAAmDR,GANhD,cAMpBI,EANoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUdrB,EAAS,mCAAG,WAAO0B,GAAP,gFACfX,EAAU,CACZC,OAAQ,CACJC,QAASJ,EACTa,MAAAA,IAJa,SAOER,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAsCG,GAPxC,cAOfI,EAPe,yBAQdA,EAASC,KAAKC,SARA,2CAAH,qD","sources":["components/MovieBar/MovieBar.jsx","pages/Movies.jsx","services/app.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst MovieBar = ({onFormSubmit}) => {\n    const [value, setValue] = useState('');\n\n    const onChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        onFormSubmit(value);\n        setValue('');\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                onChange={onChange}\n                value={value}\n                placeholder=\"Search film...\"\n                type=\"text\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    );\n};\n\nexport default MovieBar;","import { findFilms } from \"services/app\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link, useSearchParams } from \"react-router-dom\";\nimport MovieBar from \"components/MovieBar\";\n\nconst Movies = () => {\n    const [value, setValue] = useState('');\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const filter = searchParams.get('value') ?? '';\n\n    const onFormSubmit = (value) => {\n        setValue(value);\n        setSearchParams(value !== '' ? {value} : {});\n    };\n\n    useEffect(() => {\n        if (!value && !filter) {\n            return;\n        }\n\n        async function getFilms() {\n            try {\n                const listOfFilms = await findFilms(filter ? filter : value);\n                setMovies(listOfFilms)\n            } catch (error) {\n                console.log('Error!')\n            }\n        }\n        getFilms();\n    }, [value, filter])\n\n\n    return (<>\n        <MovieBar onFormSubmit={onFormSubmit} />\n        <ul>\n            {movies.map(({id, title}) => (\n                <li key={id}>\n                    <Link\n                        to={`${id}`}\n                        state={{home: location}}\n                        >{title}</Link>\n                </li>\n            ))}\n        </ul>\n    </>)\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e7011c858e160819547da18edbe0186b';\n\nexport async function getTrendingMovies() {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, options);\n    return response.data.results;\n};\n\nexport async function getMovieById(movie_id) {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}`, options);\n    return response.data;\n};\n\nexport async function getMovieCastById(movie_id) {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}/credits`, options);\n    return response.data;\n};\n\nexport const getReviewsById = async (movie_id) => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews`, options);\n    return response.data.results;\n};\n\nexport const findFilms = async (query) => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query,\n        },\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie`, options);\n    return response.data.results;\n};"],"names":["onFormSubmit","useState","value","setValue","onSubmit","e","preventDefault","onChange","target","placeholder","type","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","findFilms","listOfFilms","console","log","getFilms","map","id","title","Link","to","state","home","BASE_URL","API_KEY","getTrendingMovies","options","params","api_key","axios","response","data","results","getMovieById","movie_id","getMovieCastById","getReviewsById","query"],"sourceRoot":""}